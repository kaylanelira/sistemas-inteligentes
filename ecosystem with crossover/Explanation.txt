Nesse arquivo irei explicar as mudanças feitas por mim com base no código original.
No arquivo bloop.js:
  Foi adicionado o 'visionRange', que mapeia os genes para determinar o campo de visão do bloop; e o 'hasReproduced', que indica se o bloop já se reproduziu (limita a um bloop ter um filho, caso contrário, a reprodução acarretaria em vários filhos). Apesar de implementar um filho por bloop, poderia substituir por algo como 'maxChildrenNum', indicado o máximo de filhos. Foi uma escolha, já que não houve especificação quanto a isso.
  No método 'update()' foi adicionado um parametro que indica todas as comidas, e é utilizado para verificar se a comida está dentro do campo de visão, se sim, altero a direção do bloop para ir até a comida.
  No método 'reproduce(bloops)' foi implementado a reprodução por crossover. Foi adicionado um método 'selectPartner(bloops)' que verifica todos os possíveis parceiro de um determinado bloop verificando se ele está no seu campo de visão, adiciona todos os possíveis em um array e em seguida escolhe um aleatório desse array como parceiro. O 'reproduce(bloops)' verifica se o parceiro existe e se o bloop não se reproduziu, criando um ponto de crossover aleatório, onde antes desse ponto o filho recebe o DNA desse bloop, e depois dele é o DNA do parceiro. Também há a possibilidade de mutação.
  
No arquivo world.js:
  Foi adicionado ao construtor 'numBloops' (redundante, facilita entendimento do código) e 'maxNumBloops'. Quando um bloop nasce e morre, há uma alteração no 'numBloops', que é utilizado em comparação com o 'maxNumBloops' para saber se haverá nova reprodução. Foi implementado dessa forma, pois não compreendi se essa reprodução por crossover tem a mesma probabilidade da assexual. Assim, considerei que, sempre que algum bloop morrer, outro poderá nascer se houver as condições necessárias. 